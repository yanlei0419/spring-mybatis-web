<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security" xsi:schemaLocation="http://www.springframework.org/schema/beans 
			   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	           http://www.springframework.org/schema/security
			   http://www.springframework.org/schema/security/spring-security.xsd
">

	<sec:global-method-security pre-post-annotations="enabled" />

	<sec:http pattern="/frame/skins/sky/tab/itemChildBg.jpg" security="none" />
	<!-- 开发期间，所有的页面都不验证 -->
	<sec:http pattern="/login.jsp" security="none" />
	<sec:http pattern="/login/*.*" security="none" />
	<sec:http pattern="/index.jsp" security="none" />
	<sec:http pattern="/error/privs.jsp" security="none" />
	<sec:http pattern="/plugins/formValidator4.1.3/themes/126/js" security="none" />
	<sec:http pattern="/images/**" security="none" />
	<sec:http pattern="/frame/skins/dams/tab/list3_itemBg.jpg" security="none" />
	<sec:http pattern="/**/*.jpeg" security="none" />
	<sec:http pattern="/plugins/easyui/themes/icons/application_error.png" security="none" />
	<sec:http pattern="/frame/skins/sky/box/box_tool_left.gif" security="none" />
	<sec:http pattern="/plugins/plupload-2.3.1/js/i18n/az.js" security="none" />
	<sec:http pattern="/plugins/easyui/themes/gray/window.css" security="none" />
	<sec:http pattern="/**/*.htc" security="none" />
	<sec:http pattern="/**/*.ico" security="none" />
	<sec:http pattern="/**/*.do*" security="none" />
	<sec:http pattern="/jsp/sys/user/add.jsp" security="none" />
	<sec:http pattern="/jsp/sys/user/update.jsp" security="none" />
	<sec:http pattern="/jsp/sys/group/detail.jsp" security="none" />
	<sec:http pattern="/mg/generatorConfig.xml" security="none" />


	<!-- ExceptionTranslationFilter的accessDeniedHandler实现access-denied-page功能 -->
	<sec:http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">

		<sec:logout logout-success-url='/login.jsp' invalidate-session='true' />
		<!-- 实现免登陆验证 -->
		<sec:remember-me />
		<!-- session-fixation-protection="none" 用户登录成功之后，销毁用户的当前session，并重新生成一个session -->
		<sec:session-management invalid-session-url="/login.jsp" session-fixation-protection="none">
			<!-- 同一时间内允许同一账号保持4个在线,error-if-maximum-exceeded="true"表示第第四个以后的登不进去 -->
			<sec:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/login.jsp" />
		</sec:session-management>

		<!-- 后登陆的用户会把先登录的用户踢出系统 <sec:concurrent-session-control exception-if-maximum-exceeded="false"/> -->
		<!-- 不可以颠覆顺序 -->
		<sec:custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<sec:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />

	</sec:http>


	<!-- <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"> -->
	<!-- <property name="" value="/j_spring_security_logout"></property> -->
	<!-- </bean> -->





	<!-- <sec:custom-filter ref="loginAuthenticationFilter" position="FORM_LOGIN_FILTER" /> -->

	<!-- <bean id="loginAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"> -->
	<!-- <property name="filterProcessesUrl" value="/my_login"></property> 表单提交的url, 默认是/j_spring_security_check -->
	<!-- <property name="usernameParameter" value="my_username"></property> 表单里用户名字段的name, 默认是j_username -->
	<!-- <property name="passwordParameter" value="my_password"></property> 表单里密码字段的name, 默认是j_password -->
	<!-- <property name="authenticationManager" ref="authenticationManager" /> 一定要配置, 这里使用上面定义的authenticationManager -->
	<!-- <property name="authenticationFailureHandler" ref="authenticationFailureHandler" /> 验证失败时的处理器 -->
	<!-- <property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" /> 验证成果时的处理器 -->
	<!-- </bean> -->

	<!-- <bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"> -->
	<!-- <property name="defaultTargetUrl" value="/index" /> 验证成功时跳到哪个请求 -->
	<!-- <property name="alwaysUseDefaultTargetUrl" value="true" /> -->
	<!-- </bean> -->

	<!-- <bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"> -->
	<!-- <property name="defaultFailureUrl" value="/login" /> 验证失败时跳到哪个请求 -->
	<!-- </bean> -->



	<sec:http auto-config="true" entry-point-ref="loginFilter">
		<!-- 指定页面 true 受限页面 fasle -->
		<sec:form-login login-page="/login.jsp" username-parameter="username" password-parameter="password" authentication-failure-url="/login" login-processing-url="/spring_security_check" always-use-default-target="false" default-target-url="/demo/index_1.jsp" authentication-success-handler-ref="authenticationSuccessHandler" authentication-failure-handler-ref="authenticationFailureHandler" />
	</sec:http>

	<!-- 登录验证器 -->
	<!-- <bean id="loginFilter" class="com.zx.datastandard.mapper.sercurity.VeUsernamePasswordAuthenticationFilter"> -->
	<!-- <!-- 处理登录 -->
	-->
	<!-- <property name="filterProcessesUrl" value="/spring_security_check"></property> -->
	<!-- <!-- 表单里用户名字段的name, 默认是j_username -->
	-->
	<!-- <property name="usernameParameter" value="username"></property> -->
	<!-- <!-- 表单里密码字段的name, 默认是j_password -->
	-->
	<!-- <property name="passwordParameter" value="password"></property> -->
	<!-- <!-- 验证成果时的处理器 -->
	-->
	<!-- <property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></property> -->
	<!-- <!-- 验证失败时的处理器 -->
	-->
	<!-- <property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></property> -->
	<!-- <!-- 一定要配置, 这里使用上面定义的authenticationManager -->
	-->
	<!-- <property name="authenticationManager" ref="dhccAuthenticationManager"></property> -->
	<!-- </bean> -->


	<!-- 项目实现的用户查询服务,将用户信息查询出来 -->
	<!-- <bean id="dhccUserDetailService" class="com.dhcc.mapper.security.support.DhccUserDetailService" /> -->
	<!-- org.springframework.security.providers.ProviderManager -->



	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<!-- <bean id="dhccAccessDecisionManager" class="com.dhcc.mapper.security.support.DhccAccessDecisionManager" /> -->

	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<!-- <bean id="userService" class="com.zx.datastandard.service.impl.UserServiceImpl" /> -->

	<!-- 实现了UserDetailsService的Bean -->
	<!-- 验证配置 ， 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<!-- <sec:authentication-manager alias="dhccAuthenticationManager"> -->
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider user-service-ref="userService">
			<security:password-encoder hash="md5" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<!-- 配置过滤器: 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性， 我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<!-- <bean id="dhccFilter" class="com.dhcc.mapper.security.DhccSecurityFilter"> -->
	<!-- 登陆的认证，用户拥有的权限 -->
	<!-- <property name="authenticationManager" ref="dhccAuthenticationManager" /> -->
	<!-- 资源访问决策，用户是否拥有所请求资源的权限 -->
	<!-- <property name="accessDecisionManager" ref="dhccAccessDecisionManager" /> -->
	<!-- 资源与权限对应关系 -->
	<!-- <property name="securityMetadataSource" ref="dhccSecurityMetadataSource" /> -->
	<!-- </bean> -->

	<!-- 切换用户 -->
	<bean id="switchUserProcessingFilter" class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter">
		<property name="targetUrl" value="/index.jsp" />
		<property name="userDetailsService" ref="dhccUserDetailService"></property>
	</bean>

	<!-- 未登录的切入点 -->
	<bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl" value="/login.jsp"></property>
	</bean>

	<!-- 用户组功能 -->
	<!-- <bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager"> <property name="dataSource" ref="dataSource"/> <property name="userCache" ref="userCache"/> <property name="enableGroups" value="true"/> </bean> -->

	<!-- 定义国际化 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:org/springframework/security/messages_zh_CN" />
	</bean>


	<!-- 登录成功页面 -->
	<bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/index.jsp"></property> <!-- 验证成功时跳到哪个请求 -->
		<property name="alwaysUseDefaultTargetUrl" value="true" />
	</bean>
	<!-- 登录失败页面 -->
	<bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/login.jsp"></property> <!-- 验证失败时跳到哪个请求 -->
	</bean>

</beans>