<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
		 version="3.0">

	<!-- servlet3.0以前配置 -->
	<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext 
		instead of the default XmlWebApplicationContext -->
	<!-- 使用java 配置 -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>
			org.springframework.web.context.support.AnnotationConfigWebApplicationContext
		</param-value>
	</context-param>

	<!-- Configuration locations must consist of one or more comma- or space-delimited 
		fully-qualified @Configuration classes. Fully-qualified packages may also 
		be specified for component-scanning -->
	<!-- 制定跟配置类 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>org.annotation.config.SpringRootConfig</param-value>
	</context-param>

	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Declare a Spring MVC DispatcherServlet as usual -->
	<!-- springmvc配置 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext 
			instead of the default XmlWebApplicationContext -->
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>
				org.springframework.web.context.support.AnnotationConfigWebApplicationContext
			</param-value>
		</init-param>
		<!-- Again, config locations must consist of one or more comma- or space-delimited 
			and fully-qualified @Configuration classes -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>org.annotation.config.SpringWebConfig</param-value>
		</init-param>
	</servlet>
	<!-- map all requests for /app/* to the dispatcher servlet -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<description>  
          Web Service Test.  
    </description>
	<display-name>Web Service Test</display-name>
	<context-param>  
        <param-name>webAppRootKey</param-name>    
        <param-value>webapp.root</param-value>    
    </context-param>   
<!-- 	<context-param> -->
<!-- 		<param-name>contextConfigLocation</param-name> -->
<!-- 		<param-value>   -->
<!-- 	            classpath:application/spring.xml   -->
<!-- 	    </param-value> -->
<!-- 	</context-param> -->
<!-- 	<context-param> -->
<!-- 		<param-name>contextConfigLocation</param-name> -->
<!-- 		<param-value>   -->
<!-- 	            classpath:application/spring.xml   -->
<!-- 	            classpath:application/security.xml   -->
<!-- 	    </param-value> -->
<!-- 	</context-param> -->
	<!-- 加载Spring容器配置 -->
<!-- 	<listener> -->
<!-- 		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> -->
<!-- 	</listener> -->

	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
	<!-- 	druid -->
	<filter>  
	  <filter-name>DruidWebStatFilter</filter-name>  
	  <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>  
	  <init-param>  
	      <param-name>exclusions</param-name>  
	      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>  
	  </init-param>  
	</filter>  
	<filter-mapping>  
	  <filter-name>DruidWebStatFilter</filter-name>
	  <url-pattern>/*</url-pattern>  
	</filter-mapping>  
	
	
	
	<!-- Spring Secutiry4.1的过滤器链配置 -->
	
	<!-- spring security -->
<!-- 	<filter>   -->
<!--         <filter-name>springSecurityFilterChain</filter-name>   -->
<!--         <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>   -->
<!--     </filter>   -->
<!--     <filter-mapping>   -->
<!--         <filter-name>springSecurityFilterChain</filter-name>   -->
<!--         <url-pattern>/*</url-pattern>   -->
<!--     </filter-mapping> -->
	
	
	<!-- 解决工程编码过滤器 -->
	<filter>
		<filter-name>SpringEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SpringEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>
	
<!-- 	<filter> -->
<!--         <filter-name>checkLoginFilter</filter-name> -->
<!--         <filter-class> -->
<!--             LoginFilter -->
<!--         </filter-class> -->
<!--     </filter> -->
<!--     <filter-mapping> -->
<!--         <filter-name>checkLoginFilter</filter-name> -->
<!--         <url-pattern>/frame/*</url-pattern> -->
<!--     </filter-mapping> -->
<!--     <filter-mapping> -->
<!--         <filter-name>checkLoginFilter</filter-name> -->
<!--         <url-pattern>/jsp/*</url-pattern> -->
<!--     </filter-mapping> -->
<!--     <filter-mapping> -->
<!--         <filter-name>checkLoginFilter</filter-name> -->
<!--         <url-pattern>*.do</url-pattern> -->
<!--     </filter-mapping> -->



	
	
		
	
	
	<!-- 配置SpringMVC核心控制器 -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>spring</servlet-name> -->
<!-- 		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> -->
		<!-- 配置初始配置化文件,前面contextConfigLocation看情况二选一 -->  
<!-- 		<init-param> -->
<!-- 			<param-name>contextConfigLocation</param-name> -->
<!-- 			<param-value>classpath:application/spring-mvc.xml</param-value> -->
<!-- 		</init-param> -->
		<!-- 启动加载一次 -->  
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->
	<!--为DispatcherServlet建立映射 -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>spring</servlet-name> -->
		<!-- 此处可以可以配置成*.do，对应struts的后缀习惯 -->
<!-- 		<url-pattern>*.do</url-pattern> -->
<!-- 	</servlet-mapping> -->
	

	
	
<!-- 	<servlet> -->
<!-- 		<servlet-name>CXFService</servlet-name> -->
<!-- 		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>CXFService</servlet-name> -->
<!-- 		<url-pattern>/cxf/*</url-pattern> -->
<!-- 	</servlet-mapping> -->
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
<!-- 		<welcome-file>/demo/index_1.jsp</welcome-file> -->
	</welcome-file-list>
</web-app>